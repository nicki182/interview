{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\nconst useCreateHistogram = (dimensions, data) => {\n  _s();\n\n  const refHisto = useRef(null);\n  useEffect(() => {\n    // set the dimensions and margins of the graph\n    const {\n      width,\n      height,\n      margin = {}\n    } = dimensions;\n    const svgWidth = width + margin.left + margin.right;\n    const svgHeight = height + margin.top + margin.bottom; // append the svg object to the body of the page\n\n    const svg = d3.select(refHisto.current).attr(\"width\", svgWidth).attr(\"height\", svgHeight).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\"); // X axis: scale and draw:\n\n    const x = d3.scaleLinear().domain([0, 10]) // can use this instead of 1000 to have the max of data: d3.max(data, function(d) { return +d.price })\n    .range([0, width]);\n    svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x)); // set the parameters for the histogram\n\n    const histogram = d3.bin().value(function (d) {\n      return d;\n    }) // I need to give the vector of value\n    .domain(x.domain()) // then the domain of the graphic\n    .thresholds(x.ticks(data.length)); // then the numbers of bins\n    // And apply this function to data to get the bins\n\n    const bins = histogram(data); // Y axis: scale and draw:\n\n    const y = d3.scaleLinear().range([height, 0]);\n    y.domain([0, d3.max(bins, function (d) {\n      return d.length;\n    })]); // d3.hist has to be called before the Y axis obviously\n\n    svg.append(\"g\").call(d3.axisLeft(y)); // append the bar rectangles to the svg element\n\n    svg.selectAll(\"rect\").data(bins).enter().append(\"rect\").attr(\"x\", 1).attr(\"transform\", function (d) {\n      return \"translate(\" + x(d.x0) + \",\" + y(d.length) + \")\";\n    }).attr(\"width\", function (d) {\n      return x(d.x1) - x(d.x0) - 1;\n    }).attr(\"height\", function (d) {\n      return height - y(d.length);\n    }).style(\"fill\", \"#69b3a2\");\n  }, [dimensions, data]);\n  return refHisto;\n};\n\n_s(useCreateHistogram, \"2ikW+TcOn7RYeszt1UdU11dQ0yQ=\");\n\nexport default useCreateHistogram;","map":{"version":3,"names":["useRef","useEffect","d3","useCreateHistogram","dimensions","data","refHisto","width","height","margin","svgWidth","left","right","svgHeight","top","bottom","svg","select","current","attr","append","x","scaleLinear","domain","range","call","axisBottom","histogram","bin","value","d","thresholds","ticks","length","bins","y","max","axisLeft","selectAll","enter","x0","x1","style"],"sources":["/home/nicki/curso_fullstack/interview/FE/my-app/src/hooks/useCreateHistogram.js"],"sourcesContent":["import { useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nconst useCreateHistogram = (dimensions, data) => {\n  const refHisto = useRef(null);\n  useEffect(() => {\n    // set the dimensions and margins of the graph\n    const { width, height, margin = {} } = dimensions;\n    const svgWidth = width + margin.left + margin.right;\n    const svgHeight = height + margin.top + margin.bottom;\n\n    // append the svg object to the body of the page\n    const svg = d3\n      .select(refHisto.current)\n      .attr(\"width\", svgWidth)\n      .attr(\"height\", svgHeight)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    // X axis: scale and draw:\n    const x = d3\n      .scaleLinear()\n      .domain([0, 10]) // can use this instead of 1000 to have the max of data: d3.max(data, function(d) { return +d.price })\n      .range([0, width]);\n    svg\n      .append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n    // set the parameters for the histogram\n    const histogram = d3\n      .bin()\n      .value(function (d) {\n        return d;\n      }) // I need to give the vector of value\n      .domain(x.domain()) // then the domain of the graphic\n      .thresholds(x.ticks(data.length)); // then the numbers of bins\n\n    // And apply this function to data to get the bins\n    const bins = histogram(data);\n\n    // Y axis: scale and draw:\n    const y = d3.scaleLinear().range([height, 0]);\n    y.domain([\n      0,\n      d3.max(bins, function (d) {\n        return d.length;\n      }),\n    ]); // d3.hist has to be called before the Y axis obviously\n    svg.append(\"g\").call(d3.axisLeft(y));\n\n    // append the bar rectangles to the svg element\n    svg\n      .selectAll(\"rect\")\n      .data(bins)\n      .enter()\n      .append(\"rect\")\n      .attr(\"x\", 1)\n      .attr(\"transform\", function (d) {\n        return \"translate(\" + x(d.x0) + \",\" + y(d.length) + \")\";\n      })\n      .attr(\"width\", function (d) {\n        return x(d.x1) - x(d.x0) - 1;\n      })\n      .attr(\"height\", function (d) {\n        return height - y(d.length);\n      })\n      .style(\"fill\", \"#69b3a2\");\n  }, [dimensions, data]);\n  return refHisto;\n};\nexport default useCreateHistogram;\n"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;AACA,MAAMC,kBAAkB,GAAG,CAACC,UAAD,EAAaC,IAAb,KAAsB;EAAA;;EAC/C,MAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAD,CAAvB;EACAC,SAAS,CAAC,MAAM;IACd;IACA,MAAM;MAAEM,KAAF;MAASC,MAAT;MAAiBC,MAAM,GAAG;IAA1B,IAAiCL,UAAvC;IACA,MAAMM,QAAQ,GAAGH,KAAK,GAAGE,MAAM,CAACE,IAAf,GAAsBF,MAAM,CAACG,KAA9C;IACA,MAAMC,SAAS,GAAGL,MAAM,GAAGC,MAAM,CAACK,GAAhB,GAAsBL,MAAM,CAACM,MAA/C,CAJc,CAMd;;IACA,MAAMC,GAAG,GAAGd,EAAE,CACXe,MADS,CACFX,QAAQ,CAACY,OADP,EAETC,IAFS,CAEJ,OAFI,EAEKT,QAFL,EAGTS,IAHS,CAGJ,QAHI,EAGMN,SAHN,EAITO,MAJS,CAIF,GAJE,EAKTD,IALS,CAKJ,WALI,EAKS,eAAeV,MAAM,CAACE,IAAtB,GAA6B,GAA7B,GAAmCF,MAAM,CAACK,GAA1C,GAAgD,GALzD,CAAZ,CAPc,CAcd;;IACA,MAAMO,CAAC,GAAGnB,EAAE,CACToB,WADO,GAEPC,MAFO,CAEA,CAAC,CAAD,EAAI,EAAJ,CAFA,EAES;IAFT,CAGPC,KAHO,CAGD,CAAC,CAAD,EAAIjB,KAAJ,CAHC,CAAV;IAIAS,GAAG,CACAI,MADH,CACU,GADV,EAEGD,IAFH,CAEQ,WAFR,EAEqB,iBAAiBX,MAAjB,GAA0B,GAF/C,EAGGiB,IAHH,CAGQvB,EAAE,CAACwB,UAAH,CAAcL,CAAd,CAHR,EAnBc,CAwBd;;IACA,MAAMM,SAAS,GAAGzB,EAAE,CACjB0B,GADe,GAEfC,KAFe,CAET,UAAUC,CAAV,EAAa;MAClB,OAAOA,CAAP;IACD,CAJe,EAIb;IAJa,CAKfP,MALe,CAKRF,CAAC,CAACE,MAAF,EALQ,EAKI;IALJ,CAMfQ,UANe,CAMJV,CAAC,CAACW,KAAF,CAAQ3B,IAAI,CAAC4B,MAAb,CANI,CAAlB,CAzBc,CA+BuB;IAErC;;IACA,MAAMC,IAAI,GAAGP,SAAS,CAACtB,IAAD,CAAtB,CAlCc,CAoCd;;IACA,MAAM8B,CAAC,GAAGjC,EAAE,CAACoB,WAAH,GAAiBE,KAAjB,CAAuB,CAAChB,MAAD,EAAS,CAAT,CAAvB,CAAV;IACA2B,CAAC,CAACZ,MAAF,CAAS,CACP,CADO,EAEPrB,EAAE,CAACkC,GAAH,CAAOF,IAAP,EAAa,UAAUJ,CAAV,EAAa;MACxB,OAAOA,CAAC,CAACG,MAAT;IACD,CAFD,CAFO,CAAT,EAtCc,CA2CV;;IACJjB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBK,IAAhB,CAAqBvB,EAAE,CAACmC,QAAH,CAAYF,CAAZ,CAArB,EA5Cc,CA8Cd;;IACAnB,GAAG,CACAsB,SADH,CACa,MADb,EAEGjC,IAFH,CAEQ6B,IAFR,EAGGK,KAHH,GAIGnB,MAJH,CAIU,MAJV,EAKGD,IALH,CAKQ,GALR,EAKa,CALb,EAMGA,IANH,CAMQ,WANR,EAMqB,UAAUW,CAAV,EAAa;MAC9B,OAAO,eAAeT,CAAC,CAACS,CAAC,CAACU,EAAH,CAAhB,GAAyB,GAAzB,GAA+BL,CAAC,CAACL,CAAC,CAACG,MAAH,CAAhC,GAA6C,GAApD;IACD,CARH,EASGd,IATH,CASQ,OATR,EASiB,UAAUW,CAAV,EAAa;MAC1B,OAAOT,CAAC,CAACS,CAAC,CAACW,EAAH,CAAD,GAAUpB,CAAC,CAACS,CAAC,CAACU,EAAH,CAAX,GAAoB,CAA3B;IACD,CAXH,EAYGrB,IAZH,CAYQ,QAZR,EAYkB,UAAUW,CAAV,EAAa;MAC3B,OAAOtB,MAAM,GAAG2B,CAAC,CAACL,CAAC,CAACG,MAAH,CAAjB;IACD,CAdH,EAeGS,KAfH,CAeS,MAfT,EAeiB,SAfjB;EAgBD,CA/DQ,EA+DN,CAACtC,UAAD,EAAaC,IAAb,CA/DM,CAAT;EAgEA,OAAOC,QAAP;AACD,CAnED;;GAAMH,kB;;AAoEN,eAAeA,kBAAf"},"metadata":{},"sourceType":"module"}