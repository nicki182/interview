{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\nconst useCreateHistogram = (dimensions, data) => {\n  _s();\n\n  const refHisto = useRef(null);\n  useEffect(() => {\n    // set the dimensions and margins of the graph\n    const {\n      width,\n      height,\n      margin = {}\n    } = dimensions;\n    const svgWidth = width + margin.left + margin.right;\n    const svgHeight = height + margin.top + margin.bottom; // append the svg object to the body of the page\n\n    var svg = d3.select(refHisto.current).attr(\"width\", svgWidth).attr(\"height\", svgHeight).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\"); // X axis: scale and draw:\n\n    var x = d3.scaleLinear().domain([0, 1000]) // can use this instead of 1000 to have the max of data: d3.max(data, function(d) { return +d.price })\n    .range([0, width]);\n    svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x)); // set the parameters for the histogram\n\n    var histogram = d3.bin().value(function (d) {\n      return d;\n    }) // I need to give the vector of value\n    .domain(x.domain()) // then the domain of the graphic\n    .thresholds(x.ticks(70)); // then the numbers of bins\n    // And apply this function to data to get the bins\n\n    var bins = histogram(data); // Y axis: scale and draw:\n\n    var y = d3.scaleLinear().range([height, 0]);\n    y.domain([0, d3.max(bins, function (d) {\n      return d.length;\n    })]); // d3.hist has to be called before the Y axis obviously\n\n    svg.append(\"g\").call(d3.axisLeft(y)); // append the bar rectangles to the svg element\n\n    svg.selectAll(\"rect\").data(bins).enter().append(\"rect\").attr(\"x\", 1).attr(\"transform\", function (d) {\n      return \"translate(\" + x(d.x0) + \",\" + y(d.length) + \")\";\n    }).attr(\"width\", function (d) {\n      return x(d.x1) - x(d.x0) - 1;\n    }).attr(\"height\", function (d) {\n      return height - y(d.length);\n    }).style(\"fill\", \"#69b3a2\");\n  }, [dimensions, data]);\n  return refHisto;\n};\n\n_s(useCreateHistogram, \"2ikW+TcOn7RYeszt1UdU11dQ0yQ=\");\n\nexport default useCreateHistogram;","map":{"version":3,"names":["useRef","useEffect","d3","useCreateHistogram","dimensions","data","refHisto","width","height","margin","svgWidth","left","right","svgHeight","top","bottom","svg","select","current","attr","append","x","scaleLinear","domain","range","call","axisBottom","histogram","bin","value","d","thresholds","ticks","bins","y","max","length","axisLeft","selectAll","enter","x0","x1","style"],"sources":["/home/nicki/curso_fullstack/interview/FE/my-app/src/hooks/useCreateHistogram.js"],"sourcesContent":["import { useRef,useEffect } from \"react\";\nimport * as d3 from \"d3\";\nconst useCreateHistogram = (dimensions,data) => {\n    const refHisto = useRef(null);\n    useEffect(()=>{\n// set the dimensions and margins of the graph\nconst { width, height, margin = {} } = dimensions;\nconst svgWidth = width + margin.left + margin.right;\nconst svgHeight = height + margin.top + margin.bottom;\n\n// append the svg object to the body of the page\nvar svg = d3.select(refHisto.current)\n    .attr(\"width\", svgWidth)\n    .attr(\"height\",svgHeight)\n  .append(\"g\")\n    .attr(\"transform\",\n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  // X axis: scale and draw:\n  var x = d3.scaleLinear()\n      .domain([0, 1000])     // can use this instead of 1000 to have the max of data: d3.max(data, function(d) { return +d.price })\n      .range([0, width]);\n  svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  // set the parameters for the histogram\n  var histogram = d3.bin()\n      .value(function(d) {\n return d; })   // I need to give the vector of value\n      .domain(x.domain())  // then the domain of the graphic\n      .thresholds(x.ticks(70)); // then the numbers of bins\n\n  // And apply this function to data to get the bins\n  var bins = histogram(data);\n\n  // Y axis: scale and draw:\n  var y = d3.scaleLinear()\n      .range([height, 0]);\n      y.domain([0, d3.max(bins, function(d) { return d.length; })]);   // d3.hist has to be called before the Y axis obviously\n  svg.append(\"g\")\n      .call(d3.axisLeft(y));\n\n  // append the bar rectangles to the svg element\n  svg.selectAll(\"rect\")\n      .data(bins)\n      .enter()\n      .append(\"rect\")\n        .attr(\"x\", 1)\n        .attr(\"transform\", function(d) { return \"translate(\" + x(d.x0) + \",\" + y(d.length) + \")\"; })\n        .attr(\"width\", function(d) { return x(d.x1) - x(d.x0) -1 ; })\n        .attr(\"height\", function(d) { return height - y(d.length); })\n        .style(\"fill\", \"#69b3a2\")\n\n    },[dimensions,data]);\n    return refHisto;\n}\nexport default useCreateHistogram;"],"mappings":"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"},"metadata":{},"sourceType":"module"}